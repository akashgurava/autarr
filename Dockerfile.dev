# Development Dockerfile - mirrors production setup with hot reload

# Use multi-arch PocketBase image to copy the binary
FROM adrianmusante/pocketbase:0.31 AS pb

# Base image for running the app in dev mode
FROM node:22-alpine AS build
WORKDIR /app

# Install runtime tools for dev and healthcheck
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    tini \
    wget

# Prepare pnpm via corepack
RUN corepack enable && corepack prepare pnpm@10.20.0 --activate

# Copy package manifests first for better caching
COPY package.json pnpm-lock.yaml* pnpm-workspace.yaml* ./

# Install dependencies with cache mount for faster rebuilds
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm config set store-dir /pnpm/store && \
    pnpm install --frozen-lockfile

# Copy source files
COPY . .

ENV PUBLIC_BUILD_ENV=development
ENV PUBLIC_PB_URL=http://127.0.0.1:8090
ENV CHOKIDAR_USEPOLLING=1

COPY --from=pb /usr/local/bin/pocketbase /usr/local/bin/pocketbase

# Copy dev startup script
COPY docker/start-dev.sh /start-dev.sh
RUN chmod +x /start-dev.sh

# Create data directory for PocketBase
RUN mkdir -p /data


# Volume for PocketBase data
VOLUME ["/data"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8066/ || exit 1

# Expose ports
EXPOSE 8066 8090

# Use tini as init system
ENTRYPOINT ["/sbin/tini", "--"]

# Run both PocketBase and Vite dev server
CMD ["/start-dev.sh"]
